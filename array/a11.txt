import java.util.Scanner;

public class a11{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Get the order of the matrix (number of rows and columns should be the same for an identity matrix)
        System.out.print("Enter the order of the square matrix: ");
        int order = scanner.nextInt();

        // Initialize the matrix
        int[][] matrix = new int[order][order];

        // Input elements of the matrix
        System.out.println("Enter the elements of the matrix:");
        for (int i = 0; i < order; i++) {
            for (int j = 0; j < order; j++) {
                System.out.print("Enter element at position (" + (i + 1) + "," + (j + 1) + "): ");
                matrix[i][j] = scanner.nextInt();
            }
        }

        // Display the original matrix
        System.out.println("Original Matrix:");
        displayMatrix(matrix);

        // Check if the matrix is an identity matrix
        if (isIdentityMatrix(matrix)) {
            System.out.println("The given matrix is an Identity Matrix.");
        } else {
            System.out.println("The given matrix is NOT an Identity Matrix.");
        }

        scanner.close();
    }

    // Helper method to check if a matrix is an identity matrix
    private static boolean isIdentityMatrix(int[][] matrix) {
        int rows = matrix.length;
        int columns = matrix[0].length;

        // Check if the matrix is square (number of rows equals number of columns)
        if (rows != columns) {
            return false;
        }

        // Check if the diagonal elements are 1 and non-diagonal elements are 0
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                if ((i == j && matrix[i][j] != 1) || (i != j && matrix[i][j] != 0)) {
                    return false;
                }
            }
        }

        return true;
    }

    // Helper method to display the matrix
    private static void displayMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.print(matrix[i][j] + "\t");
            }
            System.out.println();
        }
    }
}
