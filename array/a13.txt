import java.util.Scanner;

public class a13{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Get the number of rows and columns for the matrix
        System.out.print("Enter the number of rows: ");
        int rows = scanner.nextInt();
        System.out.print("Enter the number of columns: ");
        int columns = scanner.nextInt();

        // Initialize the matrix
        int[][] matrix = new int[rows][columns];

        // Input elements of the matrix
        System.out.println("Enter the elements of the matrix:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                System.out.print("Enter element at position (" + (i + 1) + "," + (j + 1) + "): ");
                matrix[i][j] = scanner.nextInt();
            }
        }

        // Display the original matrix
        System.out.println("Original Matrix:");
        displayMatrix(matrix);

        // Check if the matrix is sparse
        if (isSparseMatrix(matrix)) {
            System.out.println("The given matrix is a Sparse Matrix.");
        } else {
            System.out.println("The given matrix is NOT a Sparse Matrix.");
        }

        scanner.close();
    }

    // Helper method to check if a matrix is a sparse matrix
    private static boolean isSparseMatrix(int[][] matrix) {
        int rows = matrix.length;
        int columns = matrix[0].length;

        int zeroCount = 0;
        int nonZeroCount = 0;

        // Count the number of zero and non-zero elements
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                if (matrix[i][j] == 0) {
                    zeroCount++;
                } else {
                    nonZeroCount++;
                }
            }
        }

        // Determine if the matrix is sparse based on the zero and non-zero counts
        return zeroCount > nonZeroCount;
    }

    // Helper method to display the matrix
    private static void displayMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.print(matrix[i][j] + "\t");
            }
            System.out.println();
        }
    }
}
